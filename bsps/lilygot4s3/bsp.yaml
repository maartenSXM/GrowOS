#ifndef _GOS_INCLUDE_BSP_YAML_
#define _GOS_INCLUDE_BSP_YAML_

#define GOS_BSP_esphome_name	    lilygot4

#include "bsp.h"

#include "bsps/common/esp32s3.yaml"
#include "bsps/common/bspAll.yaml"

esp32_ble:

psram:
  id: gosBsp_psram
  mode: octal
  speed: 80MHz

spi:
  id: gosBsp_spi
  type: quad
  clk_pin: GOS_BSP_PIN_SPI_CLK
  data_pins:
    - GOS_BSP_PIN_SPI_SI0
    - GOS_BSP_PIN_SPI_SI1
    - GOS_BSP_PIN_SPI_SI2
    - GOS_BSP_PIN_SPI_SI3

i2c:
  id: gosBsp_i2c
  sda: GOS_BSP_PIN_II2C_SDA
  scl: GOS_BSP_PIN_II2C_SCL

#ifdef GOS_BSP_HAS_display
#ifdef GOS_BSP_HAS_touchscreen
touchscreen:
  - platform: cst226
    id: gosBsp_touchscreen
    interrupt_pin: GOS_BSP_PIN_TP_INT
    reset_pin: GOS_BSP_PIN_TP_RST
#if GOS_APP_simpleDemo // apps/simpleDemo
#if 0
    calibration:
      x_min: 0
      x_max: 459
      y_min: 0
      y_max: 599
#endif
    transform:
        swap_xy: true
        mirror_x: false
        mirror_y: true
#endif
    on_touch:
      - lambda: |-
           printf("touch: x=%d, y=%d, x_raw=%d, y_raw=%0d\n",
                    touch.x, touch.y, touch.x_raw, touch.y_raw);
#endif // GOS_BSP_HAS_touchscreen

display:
    platform: qspi_amoled
    id: gosBsp_display
    model: RM690B0
    data_rate: 80MHz
    spi_mode: mode0
    dimensions:
      width: 450
      height: 600
      offset_width: 16
    color_order: rgb
    invert_colors: false
    brightness: 255
    cs_pin: GOS_BSP_PIN_SPI_CS
    reset_pin: GOS_BSP_PIN_SPI_RST
    enable_pin: GOS_BSP_PIN_VDD_EV
    update_interval: never
    auto_clear_enabled: false
    rotation: 90

#if 0 // XXX merged?
external_components:
  - source: 'github://clydebarrow/esphome@cst226'
    refresh: 10min
    components: [ cst226 ]
  - source: 'github://clydebarrow/esphome@amoled'
    components: [ qspi_amoled ]
    refresh: always
#endif
#endif // GOS_BSP_HAS_display

#endif // _GOS_INCLUDE_BSP_YAML_
